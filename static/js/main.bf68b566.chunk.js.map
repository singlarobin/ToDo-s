{"version":3,"sources":["component/Header/index.js","component/input/index.js","component/button/index.js","component/addNewTask/index.js","utils/index.js","component/IconButton/index.js","assets/icons/deleteIcon.js","assets/icons/editIcon.js","assets/icons/doneIcon.js","resource/contants.js","resource/theme.js","component/Item/index.js","component/List/index.js","component/Generate/index.js","assets/icons/lightModeIcon.js","assets/icons/darkModeIcon.js","hooks/useDarkTheme.js","assets/shapes/circle.js","assets/shapes/rectangle.js","App.js","index.js"],"names":["Container","styled","div","theme","textHeading","Header","React","memo","StyledTextArea","textarea","textNormal","glassColor2","Input","props","style","placeholderValue","rows","inputText","handleChange","placeholder","value","onChange","ButtonContainer","button","glassColor1","butonShadowColor","Button","name","handleClick","onClick","AddNewTask","useState","taskName","setTaskName","handleAddNewTask","handleInputTextChange","useCallback","e","target","handleAddButton","currTask","completed","flexGrow","isEmptyString","trim","Div","IconButton","children","DeleteIcon","width","height","fill","strokeColor","strokeWidth","xmlns","viewBox","stroke","strokeLinecap","strokeLinejoin","d","x","y","rx","defaultProps","EditIcon","x1","y1","x2","y2","DoneIcon","points","themes","Object","freeze","LIGHT","DARK","themed","lightValue","darkValue","localStorage","getItem","lightTheme","accentColor1","accentColor2","accentColor3","backgroundGradient","textNormal2","glassGradient","taskBackgroundColor","ellipseGradient","buttonShadowColor","darkTheme","InputContainer","Label","ItemNameDiv","Checkbox","input","Item","index","toDoItem","handleEditItem","handleDeleteItem","handleCompleteItem","isEdit","setIsEdit","handleEditButtonClick","handleDoneButtonClick","handleCheckboxClick","padding","margin","cursor","type","checked","textDecoration","EmptyDiv","List","toDoList","handleEditTask","handleDeleteTask","handleCompleteTask","length","map","item","MobileView","WebView","LeftContainer","RightContainer","Generate","setToDoList","useEffect","JSON","parse","setItem","stringify","currList","filter","currIndex","LightModeIcon","cx","cy","r","DarkModeIcon","useDarkTheme","setTheme","Circle","ry","fillOpacity","id","filterUnits","colorInterpolationFilters","floodOpacity","result","mode","in","in2","stdDeviation","rectangle","AppContainer","CircleContainer","RectangleContainer","EllipseContainer","App","themeToggler","darkMode","setDarkMode","selectedTheme","position","top","right","zIndex","opacity","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAGMA,EAAYC,IAAOC,IAAV,wKAGF,qBAAGC,MAAkBC,eAenBC,EARAC,IAAMC,MAAK,WACtB,OACI,cAACP,EAAD,sBCZFQ,EAAiBP,IAAOQ,SAAV,6QAEP,qBAAEN,MAAiBO,cAKd,qBAAEP,MAAiBQ,eAGpB,qBAAER,MAAiBO,cAarBE,EARDN,IAAMC,MAAK,SAAAM,GAErB,IAAQC,EAA2DD,EAA3DC,MAAOC,EAAoDF,EAApDE,iBAAkBC,EAAkCH,EAAlCG,KAAMC,EAA4BJ,EAA5BI,UAAWC,EAAiBL,EAAjBK,aAElD,OAAO,cAACV,EAAD,CAAgBM,MAAOA,EAAOK,YAAaJ,EAAkBC,KAAMA,EAAMI,MAAOH,EAAWI,SAAUH,OCpB1GI,EAAkBrB,IAAOsB,OAAV,2UAER,qBAAGpB,MAAkBC,eAGN,qBAAGD,MAAkBC,eAE/B,qBAAGD,MAAkBqB,eAKL,qBAAErB,MAAiBsB,oBAAyC,qBAAEtB,MAAiBsB,oBAUlGC,EANA,SAAAb,GACX,IAAQc,EAA6Bd,EAA7Bc,KAAMC,EAAuBf,EAAvBe,YAAad,EAAUD,EAAVC,MAE3B,OAAO,cAACQ,EAAD,CAAiBR,MAAOA,EAAOe,QAASD,EAAxC,SAAsDD,KCf3D3B,EAAYC,IAAOC,IAAV,+KA8BA4B,EApBIxB,IAAMC,MAAK,SAAAM,GAC1B,MAAgCkB,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACQC,EAAqBrB,EAArBqB,iBAGFC,EAAwBC,uBAAY,SAACC,GAAD,OAAOJ,EAAYI,EAAEC,OAAOlB,SAAQ,IAExEmB,EAAkBH,uBAAY,WAChC,IAAMI,EAAW,CAAEb,KAAMK,EAAUS,WAAW,GAC9CR,EAAY,IACZC,EAAiBM,KAClB,CAACR,EAAUE,IAEd,OAAO,eAAC,EAAD,WACH,cAAC,EAAD,CAAOnB,iBAAkB,eAAgBC,KAAM,IAAKC,UAAWe,EAC3Dd,aAAciB,EAAuBrB,MAAO,CAAE4B,SAAU,OAC5D,cAAC,EAAD,CAAQf,KAAI,SAAYC,YAAaW,UChCvCI,EAAgB,SAAAvB,GAAK,OAAKA,GAA2B,kBAAVA,GAAqC,KAAfA,EAAMwB,MCGvEC,EAAM5C,IAAOC,IAAV,0BAWM4C,EATIxC,IAAMC,MAAK,SAAAM,GAE1B,IAAQkC,EAA6BlC,EAA7BkC,SAAUjC,EAAmBD,EAAnBC,MAAOe,EAAYhB,EAAZgB,QAEzB,OAAO,cAACgB,EAAD,CAAK/B,MAAOA,EAAOe,QAASA,EAA5B,SACFkB,OCVHC,EAAa,SAAAnC,GACf,IAAQoC,EAAyDpC,EAAzDoC,MAAOC,EAAkDrC,EAAlDqC,OAAQC,EAA0CtC,EAA1CsC,KAAMC,EAAoCvC,EAApCuC,YAAaC,EAAuBxC,EAAvBwC,YAAavC,EAAUD,EAAVC,MACvD,OAAO,sBAAKwC,MAAM,6BAA6BL,MAAOA,EAAOC,OAAQA,EAAQK,QAAQ,YAAYzC,MAAOA,EACpGqC,KAAMA,EAAMK,OAAQJ,EAAaC,YAAaA,EAAaI,cAAc,QAAQC,eAAe,QAD7F,UAEH,sBAAMP,KAAMA,EAAMK,OAAO,OAAOG,EAAE,kBAClC,sBAAMC,EAAE,IAAIC,EAAE,IAAIZ,MAAM,KAAKC,OAAO,KAAKY,GAAG,MAC5C,sBAAMH,EAAE,6BAIDX,IAEfA,EAAWe,aAAe,CACtBd,MAAO,SACPC,OAAQ,SACRC,KAAM,OACNC,YAAa,UACbC,YAAa,OCjBjB,IAAMW,EAAW,SAAAnD,GACb,IAAQoC,EAAyDpC,EAAzDoC,MAAOC,EAAkDrC,EAAlDqC,OAAQC,EAA0CtC,EAA1CsC,KAAMC,EAAoCvC,EAApCuC,YAAaC,EAAuBxC,EAAvBwC,YAAavC,EAAUD,EAAVC,MAEvD,OAAO,sBAAKwC,MAAM,6BAA6BL,MAAOA,EAAOC,OAAQA,EAAQK,QAAQ,YAAYzC,MAAOA,EACpGqC,KAAMA,EAAMK,OAAQJ,EAAaC,YAAaA,EAAaI,cAAc,QAAQC,eAAe,QAD7F,UAEH,sBAAMP,KAAMA,EAAMK,OAAO,OAAOG,EAAE,kBAClC,sBAAMA,EAAE,+DACR,sBAAMA,EAAE,oDACR,sBAAMM,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,UAIzBJ,IAEfA,EAASD,aAAe,CACpBd,MAAO,SACPC,OAAQ,SACRC,KAAM,OACNC,YAAa,UACbC,YAAa,OCnBjB,IAAMgB,EAAW,SAAAxD,GACb,IAAQoC,EAAyDpC,EAAzDoC,MAAOC,EAAkDrC,EAAlDqC,OAAQC,EAA0CtC,EAA1CsC,KAAMC,EAAoCvC,EAApCuC,YAAaC,EAAuBxC,EAAvBwC,YAAavC,EAAUD,EAAVC,MAEvD,OAAO,sBAAKwC,MAAM,6BAA6BL,MAAOA,EAAOC,OAAQA,EAAQK,QAAQ,YAAYzC,MAAOA,EACpGqC,KAAMA,EAAMK,OAAQJ,EAAaC,YAAaA,EAAaI,cAAc,QAAQC,eAAe,QAD7F,UAEH,sBAAMP,KAAMA,EAAMK,OAAO,OAAOG,EAAE,kBAClC,0BAAUW,OAAO,oBACjB,sBAAMX,EAAE,yEAIDU,IAEfA,EAASN,aAAe,CACpBd,MAAO,SACPC,OAAQ,SACRC,KAAM,OACNC,YAAa,UACbC,YAAa,OClBjB,I,wBAAMkB,EAASC,OAAOC,OAAO,CACzBC,MAAO,QACPC,KAAM,SAGJC,EAAS,SAACC,EAAYC,GAAb,OAA2BC,aAAaC,QAAQ,eAAiBT,EAAOG,MAAQG,EAAaC,GCLtGG,EAAa,CACfC,aAAc,UACdC,aAAc,UACdC,aAAc,UACdC,mBAAoB,uDACpBjF,YAAa,UACbM,WAAY,UACZ4E,YAAa,UACbC,cAAe,4EACf/D,YAAa,wBACbb,YAAa,wBACb6E,oBAAqB,wBACrBC,gBAAiB,4CACjBC,kBAAmB,yBAGjBC,EAAY,CACdT,aAAc,UACdE,aAAc,UACdC,mBAAoB,8CACpBjF,YAAa,UACbM,WAAY,UACZ4E,YAAa,UACbC,cAAe,4EACf/D,YAAa,wBACbb,YAAa,wBACb6E,oBAAqB,wBACrBC,gBAAiB,4CACjBC,kBAAmB,yBClBjB1F,EAAYC,IAAOC,IAAV,oJAIG,qBAAGC,MAAkBQ,eAIjCiF,EAAiB3F,IAAOC,IAAV,2FAMd2F,EAAQ5F,IAAOC,IAAV,2HAIE,qBAAGC,MAAkBmF,eAG5BQ,EAAc7F,IAAOC,IAAV,iFAGJ,qBAAGC,MAAkBO,cAG5BqF,GAAW9F,IAAO+F,MAAV,2EAiDCC,GA5CF,SAAApF,GACT,IAAQqF,EAA+FrF,EAA/FqF,MAAR,EAAuGrF,EAAxFsF,SAAYxE,EAA3B,EAA2BA,KAAMc,EAAjC,EAAiCA,UAAa2D,EAAyDvF,EAAzDuF,eAAgBC,EAAyCxF,EAAzCwF,iBAAkBC,EAAuBzF,EAAvByF,mBAChF,EAA4BvE,oBAAS,GAArC,mBAAOwE,EAAP,KAAeC,EAAf,KACA,EAAgCzE,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMwE,EAAwBrE,uBAAY,WACtCoE,GAAU,GACVvE,EAAYN,KACb,CAACA,IAEE+E,EAAwBtE,uBAAY,WACtCoE,GAAU,GACVJ,EAAeF,EAAOlE,KACvB,CAACkE,EAAOlE,EAAUoE,IAEfO,EAAsBvE,uBAAY,SAAAhB,GAAK,OAAIkF,EAAmBJ,EAAO9E,KAAQ,CAAC8E,EAAOI,IAErFnE,EAAwBC,uBAAY,SAAAC,GAAC,OAAIJ,EAAYI,EAAEC,OAAOlB,SAAQ,IAE5E,OAAO,cAAC,EAAD,UACFmF,EAAS,eAAC,WAAD,WACN,eAACX,EAAD,WACI,cAACC,EAAD,UAAQ,cACR,cAAC,EAAD,CAAO9E,iBAAkB,YAAaC,KAAM,EAAGC,UAAWe,EACtDd,aAAciB,EAAuBrB,MAAO,CAAE4B,SAAU,IAAKkE,QAAS,cAAeC,OAAQ,eAGrG,cAAC,EAAD,CAAYhF,QAAS6E,EAArB,SACI,cAAC,EAAD,CAAUtD,YAAawB,EAAOK,EAAWK,YAAaK,EAAUL,aAAcxE,MAAO,CAAEgG,OAAQ,kBAEzF,eAAC,WAAD,WACV,cAACf,GAAD,CAAUgB,KAAK,WAAWC,QAASvE,EAAWpB,SAAU,SAAAgB,GAAC,OAAIsE,EAAoBtE,EAAEC,OAAO0E,YAC1F,cAAClB,EAAD,CAAahF,MAAO,CAAEmG,eAAgBxE,EAAY,eAAiB,QAAnE,SAA8Ed,IAC9E,cAAC,EAAD,CAAYE,QAAS4E,EAArB,SACI,cAAC,EAAD,CAAUrD,YAAawB,EAAOK,EAAWK,YAAaK,EAAUL,aAAcxE,MAAO,CAAEgG,OAAQ,eAEnG,cAAC,EAAD,CAAYjF,QAAS,kBAAMwE,EAAiBH,IAA5C,SACI,cAAC,EAAD,CAAY9C,YAAawB,EAAOK,EAAWK,YAAaK,EAAUL,aAAcxE,MAAO,CAAEgG,OAAQ,qBCzE3GjE,GAAM5C,IAAOC,IAAV,yRAIS,qBAAGC,MAAkBqB,eAUjC0F,GAAWjH,IAAOC,IAAV,uOAMD,qBAAGC,MAAkBO,cAsBnByG,GAfF,SAAAtG,GACT,IAAQuG,EAAmEvG,EAAnEuG,SAAUC,EAAyDxG,EAAzDwG,eAAgBC,EAAyCzG,EAAzCyG,iBAAkBC,EAAuB1G,EAAvB0G,mBAE9CnB,EAAiBhE,uBAAY,SAAC8D,EAAOlE,GAAR,OAAqBqF,EAAenB,EAAOlE,KAAW,CAACqF,IACpFhB,EAAmBjE,uBAAY,SAAA8D,GAAK,OAAIoB,EAAiBpB,KAAQ,CAACoB,IAClEhB,EAAqBlE,uBAAY,SAAC8D,EAAO9E,GAAR,OAAkBmG,EAAmBrB,EAAO9E,KAAQ,CAACmG,IAE5F,OAAO,cAAC,GAAD,UACD5E,EAAcyE,IAAiC,IAApBA,EAASI,OAGhC,cAACN,GAAD,uBAHgDE,EAASK,KAAI,SAACC,EAAMxB,GACtE,OAAO,cAAC,GAAD,CAAkBA,MAAOA,EAAOC,SAAUuB,EAAMtB,eAAgBA,EACnEC,iBAAkBA,EAAkBC,mBAAoBA,GAD1CJ,SCnCxBrD,GAAM5C,IAAOC,IAAV,mJAQHyH,GAAa1H,IAAOC,IAAV,sOAaV0H,GAAU3H,IAAOC,IAAV,2UASS,qBAAGC,MAAkBoF,iBAOrCsC,GAAgB5H,IAAOC,IAAV,wPAMG,qBAAGC,MAAkBqB,eAMrCsG,GAAiB7H,IAAOC,IAAV,4KAsEL6H,GA7DE,WACb,MAAgChG,mBAAS,MAAzC,mBAAOqF,EAAP,KAAiBY,EAAjB,KAEAC,qBAAU,WACND,EAAYE,KAAKC,MAAMpD,aAAaC,QAAQ,gBAC7C,IAEHiD,qBAAU,WACNlD,aAAaqD,QAAQ,WAAYF,KAAKG,UAAUjB,MACjD,CAACA,IAEJ,IAAMlF,EAAmBE,uBAAY,SAAAsF,GAAI,OAAIM,EAAarF,EAAcyE,GAAkC,CAACM,GAAlD,sBAA+BN,GAA/B,CAAyCM,OAAiB,CAACN,IAC9GE,EAAmBlF,uBAAY,SAAA8D,GACjC,IAAMoC,EAAWlB,EAASmB,QAAO,SAAAb,GAAI,OAAIA,IAASN,EAASlB,MAC3D8B,EAAYM,KACb,CAAClB,IAEEC,EAAiBjF,uBAAY,SAAC8D,EAAOlE,GACvC,IAAMsG,EAAWlB,EAASK,KAAI,SAACC,EAAMc,GAIjC,OAHIA,IAActC,IACdwB,EAAK/F,KAAOK,GAET0F,KAEXM,EAAYM,KACb,CAAClB,IAEEG,EAAqBnF,uBAAY,SAAC8D,EAAO9E,GAC3C,IAAMkH,EAAWlB,EAASK,KAAI,SAACC,EAAMc,GAIjC,OAHIA,IAActC,IACdwB,EAAKjF,UAAYrB,GAEdsG,KAEXM,EAAYM,KACb,CAAClB,IAEJ,OAAO,eAAC,GAAD,WACH,eAACO,GAAD,WACI,eAACE,GAAD,WACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAY3F,iBAAkBA,OAElC,cAAC,GAAD,CAAMkF,SAAUA,EAAUC,eAAgBA,EACtCC,iBAAkBA,EAAkBC,mBAAoBA,OAGhE,eAACK,GAAD,WACI,eAACC,GAAD,WACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAY3F,iBAAkBA,OAElC,cAAC4F,GAAD,UACI,cAAC,GAAD,CAAMV,SAAUA,EAAUC,eAAgBA,EACtCC,iBAAkBA,EAAkBC,mBAAoBA,aCvHtEkB,GAAgB,SAAA5H,GAElB,IAAQoC,EAAkDpC,EAAlDoC,MAAOC,EAA2CrC,EAA3CqC,OAAQC,EAAmCtC,EAAnCsC,KAAMC,EAA6BvC,EAA7BuC,YAAaC,EAAgBxC,EAAhBwC,YAE1C,OAAO,sBAAKC,MAAM,6BAA6BL,MAAOA,EAAOC,OAAQA,EAAQK,QAAQ,YACjFF,YAAaA,EAAaG,OAAQJ,EAAaD,KAAMA,EAAMM,cAAc,QAAQC,eAAe,QAD7F,UAEH,sBAAMF,OAAO,OAAOG,EAAE,gBAAgBR,KAAMA,IAC5C,wBAAQuF,GAAG,KAAKC,GAAG,KAAKC,EAAE,MAC1B,sBAAM3E,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,MAChC,sBAAMH,GAAG,KAAKC,GAAG,IAAIC,GAAG,OAAOC,GAAG,QAClC,sBAAMH,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,OACjC,sBAAMH,GAAG,KAAKC,GAAG,KAAKC,GAAG,OAAOC,GAAG,SACnC,sBAAMH,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,OACjC,sBAAMH,GAAG,IAAIC,GAAG,KAAKC,GAAG,MAAMC,GAAG,SACjC,sBAAMH,GAAG,IAAIC,GAAG,KAAKC,GAAG,IAAIC,GAAG,OAC/B,sBAAMH,GAAG,IAAIC,GAAG,IAAIC,GAAG,MAAMC,GAAG,YAIzBqE,MAEfA,GAAc1E,aAAe,CACzBd,MAAO,SACPC,OAAQ,SACRC,KAAM,OACNC,YAAa,OACbC,YAAa,OC1BjB,IAAMwF,GAAe,SAAAhI,GAEjB,IAAQoC,EAAkDpC,EAAlDoC,MAAOC,EAA2CrC,EAA3CqC,OAAQC,EAAmCtC,EAAnCsC,KAAMC,EAA6BvC,EAA7BuC,YAAaC,EAAgBxC,EAAhBwC,YAE1C,OAAO,sBAAKC,MAAM,6BAA6BL,MAAOA,EAAOC,OAAQA,EAAQK,QAAQ,YACjFF,YAAaA,EAAaG,OAAQJ,EAAaD,KAAMA,EAAMM,cAAc,QAAQC,eAAe,QAD7F,UAEH,sBAAMF,OAAO,OAAOG,EAAE,gBAAgBR,KAAMA,IAC5C,sBAAMQ,EAAE,mFACR,sBAAMA,EAAE,sEACR,sBAAMA,EAAE,yBAIDkF,MAEfA,GAAa9E,aAAe,CACxBd,MAAO,SACPC,OAAQ,SACRC,KAAM,OACNC,YAAa,UACbC,YAAa,OChBjB,I,YAkBeyF,GAlBM,WACjB,MAA0B/G,mBAASwC,EAAOG,OAA1C,mBAAOvE,EAAP,KAAc4I,EAAd,KAEAd,qBAAU,WACDtF,EAAcoC,aAAaC,QAAQ,eACpC+D,EAAShE,aAAaC,QAAQ,gBAGnC,IAEHiD,qBAAU,kBAAMlD,aAAaqD,QAAQ,YAAajI,IAAUoE,EAAOG,MAAQH,EAAOG,MAAQH,EAAOI,QAAO,CAACxE,IAIzG,MAAO,CAACA,EAFa,kBAAM4I,EAAS5I,IAAUoE,EAAOG,MAAQH,EAAOI,KAAOJ,EAAOG,UCCvEsE,GAjBA,SAAAnI,GACX,IAAQsC,EAAgBtC,EAAhBsC,KAAMrC,EAAUD,EAAVC,MACd,OAAO,sBAAKmC,MAAM,MAAMC,OAAO,MAAMK,QAAQ,cAAczC,MAAOA,EAAOqC,KAAK,OAAOG,MAAM,6BAApF,UACH,mBAAGiF,OAAO,kBAAV,SACI,yBAASG,GAAG,MAAMC,GAAG,QAAQ7E,GAAG,MAAMmF,GAAG,QAAQ9F,KAAMA,EAAM+F,YAAY,WAE7E,+BACI,yBAAQC,GAAG,YAAYvF,EAAE,IAAIC,EAAE,IAAIZ,MAAM,MAAMC,OAAO,MAAMkG,YAAY,iBAAiBC,0BAA0B,OAAnH,UACI,yBAASC,aAAa,IAAIC,OAAO,uBACjC,yBAASC,KAAK,SAASC,GAAG,gBAAgBC,IAAI,qBAAqBH,OAAO,UAC1E,gCAAgBI,aAAa,IAAIJ,OAAO,oCCOzCK,GAjBG,SAAA/I,GACd,IAAQsC,EAAgBtC,EAAhBsC,KAAMrC,EAAUD,EAAVC,MACd,OAAO,sBAAKmC,MAAM,MAAMC,OAAO,MAAMK,QAAQ,cAAczC,MAAOA,EAAOqC,KAAK,OAAOG,MAAM,6BAApF,UACH,mBAAGiF,OAAO,kBAAV,SACI,sBAAM3E,EAAE,IAAIC,EAAE,IAAIZ,MAAM,MAAMC,OAAO,MAAMY,GAAG,KAAKX,KAAMA,MAE7D,+BACI,yBAAQgG,GAAG,YAAYvF,EAAE,IAAIC,EAAE,IAAIZ,MAAM,MAAMC,OAAO,MAAMkG,YAAY,iBAAiBC,0BAA0B,OAAnH,UACI,yBAASC,aAAa,IAAIC,OAAO,uBACjC,yBAASC,KAAK,SAASC,GAAG,gBAAgBC,IAAI,qBAAqBH,OAAO,UAC1E,gCAAgBI,aAAa,IAAIJ,OAAO,oCCGlDM,GAAe5J,IAAOC,IAAV,yIAEH,qBAAGC,MAAkBkF,sBAM9ByE,GAAkB7J,IAAOC,IAAV,8ZA0Bf6J,GAAqB9J,IAAOC,IAAV,4dA4BlB8J,GAAmB/J,IAAOC,IAAV,mhBAOJ,qBAAGC,MAAkBsF,mBA0DxBwE,GAlCH,WACR,MAA8BnB,KAA9B,mBAAO3I,EAAP,KAAc+J,EAAd,KACA,EAAgCnI,oBAAS,GAAzC,mBAAOoI,EAAP,KAAiBC,EAAjB,KACMC,EAAgBlK,IAAUoE,EAAOG,MAAQO,EAAaU,EAE5DsC,qBAAU,kBAAMmC,EAAYjK,IAAUoE,EAAOG,SAAuB,CAACvE,IAGrE,OACI,cAAC,IAAD,CAAeA,MAAOkK,EAAtB,SACI,eAACR,GAAD,WACI,cAAC,EAAD,CAAYhI,QAJE,kBAAMqI,KAKhBpJ,MAAO,CAAEwJ,SAAU,WAAYC,IAAK,OAAQC,MAAO,OAAQ1D,OAAQ,UAAW2D,OAAQ,KAD1F,SAEKN,EAAW,cAAC,GAAD,IAAoB,cAAC,GAAD,MAEpC,cAAC,GAAD,IAEA,cAACL,GAAD,UACI,cAAC,GAAD,CAAQ3G,KAAMgH,EAAWxE,EAAUP,aAAeH,EAAWG,aACzDtE,MAAO,CAAEoC,OAAQ,UAAWD,MAAO,eAG3C,cAAC8G,GAAD,UACI,cAAC,GAAD,CAAW5G,KAAMgH,EAAWxE,EAAUT,aAAeD,EAAWC,aAC5DpE,MAAO,CAAEoC,OAAQ,UAAWD,MAAO,eAG3C,cAAC+G,GAAD,CAAkBlJ,MAAO,CAAE4J,QAASP,EAAW,MAAQ,aChIvEQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,GAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.bf68b566.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport React from 'react';\r\n\r\nconst Container = styled.div`\r\n    font-size: 4rem;\r\n    margin: 3.5rem auto 2rem;\r\n    color: ${({ theme }) => theme.textHeading};\r\n\r\n    @media (min-width: 1024px){\r\n        margin: 2rem auto;\r\n    }\r\n`;\r\n\r\nconst Header = React.memo(() => {\r\n    return (\r\n        <Container>\r\n            ToDo\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default Header;\r\n\r\n\r\n","import styled from 'styled-components';\r\nimport React from 'react';\r\n\r\nconst StyledTextArea = styled.textarea`\r\n    font-size: 1rem;\r\n    color: ${({theme}) => theme.textNormal};\r\n    padding: 0.5rem;\r\n    resize: none;\r\n    border: none;\r\n    outline:none;\r\n    background: ${({theme}) => theme.glassColor2};\r\n    border-radius: 0.3rem;\r\n    ::placeholder {\r\n        color: ${({theme}) => theme.textNormal};\r\n        opacity: 0.75;\r\n    }\r\n`;\r\n\r\nconst Input = React.memo(props => {\r\n\r\n    const { style, placeholderValue, rows, inputText, handleChange } = props;\r\n\r\n    return <StyledTextArea style={style} placeholder={placeholderValue} rows={rows} value={inputText} onChange={handleChange} />\r\n\r\n});\r\n\r\nexport default Input;","import styled from \"styled-components\";\r\n\r\nconst ButtonContainer = styled.button`\r\n    font-size:1rem;\r\n    color: ${({ theme }) => theme.textHeading};\r\n    padding: 0.75rem 1rem;\r\n    margin: 1.5rem auto;\r\n    border: 0.05rem solid ${({ theme }) => theme.textHeading};\r\n    border-radius: 0.2rem;\r\n    background: ${({ theme }) => theme.glassColor1};\r\n    cursor: pointer;\r\n\r\n    &:hover,\r\n    &:focus {\r\n        box-shadow: 1px 2px 2px ${({theme}) => theme.butonShadowColor} inset, -1px -2px 1px ${({theme}) => theme.butonShadowColor} inset;\r\n    }\r\n`;\r\n\r\nconst Button = props => {\r\n    const { name, handleClick, style } = props;\r\n\r\n    return <ButtonContainer style={style} onClick={handleClick}>{name}</ButtonContainer>;\r\n}\r\n\r\nexport default Button;","import { useCallback, useState } from 'react';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport Input from '../input';\r\nimport Button from '../button';\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    @media (min-width: 1024px){\r\n        margin: 2.5rem auto;\r\n    }\r\n`;\r\n\r\nconst AddNewTask = React.memo(props => {\r\n    const [taskName, setTaskName] = useState('');\r\n    const { handleAddNewTask } = props;\r\n\r\n\r\n    const handleInputTextChange = useCallback((e) => setTaskName(e.target.value), []);\r\n\r\n    const handleAddButton = useCallback(() => {\r\n        const currTask = { name: taskName, completed: false };\r\n        setTaskName('');\r\n        handleAddNewTask(currTask);\r\n    }, [taskName, handleAddNewTask]);\r\n\r\n    return <Container>\r\n        <Input placeholderValue={'Add New Task'} rows={'2'} inputText={taskName}\r\n            handleChange={handleInputTextChange} style={{ flexGrow: '1' }} />\r\n        <Button name={`CREATE`} handleClick={handleAddButton} />\r\n    </Container>;\r\n});\r\n\r\nexport default AddNewTask;\r\n","const isEmptyString = value => !value || (typeof value === 'string' && value.trim === '');\r\n\r\nexport {\r\n    isEmptyString,\r\n}","import styled from 'styled-components';\r\nimport React from 'react';\r\n\r\nconst Div = styled.div``;\r\n\r\nconst IconButton = React.memo(props => {\r\n\r\n    const { children, style, onClick } = props;\r\n\r\n    return <Div style={style} onClick={onClick}>\r\n        {children}\r\n    </Div>\r\n});\r\n\r\nexport default IconButton;","const DeleteIcon = props => {\r\n    const { width, height, fill, strokeColor, strokeWidth, style } = props;\r\n    return <svg xmlns='http://www.w3.org/2000/svg' width={width} height={height} viewBox='0 0 24 24' style={style}\r\n        fill={fill} stroke={strokeColor} strokeWidth={strokeWidth} strokeLinecap='round' strokeLinejoin='round'>\r\n        <path fill={fill} stroke='none' d='M0 0h24v24H0z' />\r\n        <rect x='4' y='4' width='16' height='16' rx='2' />\r\n        <path d='M10 10l4 4m0 -4l-4 4' />\r\n    </svg>\r\n};\r\n\r\nexport default DeleteIcon;\r\n\r\nDeleteIcon.defaultProps = {\r\n    width: '1.5rem',\r\n    height: '1.5rem',\r\n    fill: 'none',\r\n    strokeColor: '#102F81',\r\n    strokeWidth: '1.5',\r\n}","const EditIcon = props => {\r\n    const { width, height, fill, strokeColor, strokeWidth, style } = props;\r\n\r\n    return <svg xmlns='http://www.w3.org/2000/svg' width={width} height={height} viewBox='0 0 24 24' style={style}\r\n        fill={fill} stroke={strokeColor} strokeWidth={strokeWidth} strokeLinecap='round' strokeLinejoin='round'>\r\n        <path fill={fill} stroke='none' d='M0 0h24v24H0z' />\r\n        <path d='M9 7h-3a2 2 0 0 0 -2 2v9a2 2 0 0 0 2 2h9a2 2 0 0 0 2 -2v-3' />\r\n        <path d='M9 15h3l8.5 -8.5a1.5 1.5 0 0 0 -3 -3l-8.5 8.5v3' />\r\n        <line x1='16' y1='5' x2='19' y2='8' />\r\n    </svg>;\r\n};\r\n\r\nexport default EditIcon;\r\n\r\nEditIcon.defaultProps = {\r\n    width: '1.5rem',\r\n    height: '1.5rem',\r\n    fill: 'none',\r\n    strokeColor: '#102F81',\r\n    strokeWidth: '1.5',\r\n};","const DoneIcon = props => {\r\n    const { width, height, fill, strokeColor, strokeWidth, style } = props;\r\n\r\n    return <svg xmlns='http://www.w3.org/2000/svg' width={width} height={height} viewBox='0 0 24 24' style={style}\r\n        fill={fill} stroke={strokeColor} strokeWidth={strokeWidth} strokeLinecap='round' strokeLinejoin='round'>\r\n        <path fill={fill} stroke='none' d='M0 0h24v24H0z' />\r\n        <polyline points='9 11 12 14 20 6' />\r\n        <path d='M20 12v6a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h9' />\r\n    </svg>;\r\n};\r\n\r\nexport default DoneIcon;\r\n\r\nDoneIcon.defaultProps = {\r\n    width: '1.5rem',\r\n    height: '1.5rem',\r\n    fill: 'none',\r\n    strokeColor: '#102F81',\r\n    strokeWidth: '1.5',\r\n}","const themes = Object.freeze({\r\n    LIGHT: 'LIGHT',\r\n    DARK: 'DARK',\r\n})\r\n\r\nconst themed = (lightValue, darkValue) => localStorage.getItem('ToDoTheme') === themes.LIGHT ? lightValue : darkValue;\r\n\r\nexport {\r\n    themes,\r\n    themed,\r\n}","const lightTheme = {\r\n    accentColor1: '#B3C8FF',\r\n    accentColor2: '#BAC9FF',\r\n    accentColor3: '#EED3FF',\r\n    backgroundGradient: 'linear-gradient(to right, #B3C8FF, #BAC9FF, #EED3FF)',\r\n    textHeading: '#102F81',\r\n    textNormal: '#20795E',\r\n    textNormal2: '#102F81',\r\n    glassGradient: 'linear-gradient(to top right, rgba(255,255,255,0), rgba(255,255,255,0.2))',\r\n    glassColor1: 'rgba(255,255,255,0.2)',\r\n    glassColor2: 'rgba(255,255,255,0.5)',\r\n    taskBackgroundColor: 'rgba(255,255,255,0.7)',\r\n    ellipseGradient: 'linear-gradient(to top, #EED3FF, #B3C8FF)',\r\n    buttonShadowColor: 'rgba(255,255,255,0.8)',\r\n}\r\n\r\nconst darkTheme = {\r\n    accentColor1: '#102F81',\r\n    accentColor3: '#2E87A3',\r\n    backgroundGradient: 'linear-gradient(to right, #102F81, #2E87A3)',\r\n    textHeading: '#E0CEEC',\r\n    textNormal: '#064C8C',\r\n    textNormal2: '#1B6666',\r\n    glassGradient: 'linear-gradient(to top right, rgba(255,255,255,0), rgba(255,255,255,0.2))',\r\n    glassColor1: 'rgba(255,255,255,0.2)',\r\n    glassColor2: 'rgba(255,255,255,0.5)',\r\n    taskBackgroundColor: 'rgba(255,255,255,0.7)',\r\n    ellipseGradient: 'linear-gradient(to top, #2E87A3, #102F81)',\r\n    buttonShadowColor: 'rgba(255,255,255,0.5)',\r\n}\r\n\r\nexport {\r\n    lightTheme,\r\n    darkTheme,\r\n}","import styled from 'styled-components';\r\nimport IconButton from '../IconButton';\r\nimport DeleteIcon from '../../assets/icons/deleteIcon';\r\nimport EditIcon from '../../assets/icons/editIcon';\r\nimport DoneIcon from '../../assets/icons/doneIcon';\r\nimport React, { Fragment, useCallback, useState } from 'react';\r\nimport Input from '../input';\r\nimport { themed } from '../../resource/contants';\r\nimport { lightTheme, darkTheme } from '../../resource/theme';\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    margin-bottom: 0.5rem;\r\n    padding: 0.5rem;\r\n    background: ${({ theme }) => theme.glassColor2};\r\n    border-radius: 0.3rem;\r\n`;\r\n\r\nconst InputContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 1;\r\n`;\r\n\r\nconst Label = styled.div`\r\n    font-size: 0.7rem;\r\n    margin-left: 0.5rem;\r\n    margin-bottom: 0.2rem;\r\n    color: ${({ theme }) => theme.textNormal2};\r\n`;\r\n\r\nconst ItemNameDiv = styled.div`\r\n    font-size: 1rem;\r\n    flex: 1;\r\n    color: ${({ theme }) => theme.textNormal};\r\n`;\r\n\r\nconst Checkbox = styled.input`\r\n    margin-right: 1rem;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst Item = props => {\r\n    const { index, toDoItem: { name, completed }, handleEditItem, handleDeleteItem, handleCompleteItem } = props;\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [taskName, setTaskName] = useState('');\r\n\r\n    const handleEditButtonClick = useCallback(() => {\r\n        setIsEdit(true);\r\n        setTaskName(name);\r\n    }, [name]);\r\n\r\n    const handleDoneButtonClick = useCallback(() => {\r\n        setIsEdit(false);\r\n        handleEditItem(index, taskName);\r\n    }, [index, taskName, handleEditItem]);\r\n    \r\n    const handleCheckboxClick = useCallback(value => handleCompleteItem(index, value), [index, handleCompleteItem]);\r\n\r\n    const handleInputTextChange = useCallback(e => setTaskName(e.target.value), []);\r\n\r\n    return <Container>\r\n        {isEdit ? <Fragment>\r\n            <InputContainer>\r\n                <Label>{'Edit Name'}</Label>\r\n                <Input placeholderValue={'Task Name'} rows={1} inputText={taskName}\r\n                    handleChange={handleInputTextChange} style={{ flexGrow: '1', padding: '0.25 0.5rem', margin: '0.5rem' }} />\r\n            </InputContainer>\r\n\r\n            <IconButton onClick={handleDoneButtonClick}>\r\n                <DoneIcon strokeColor={themed(lightTheme.textNormal2, darkTheme.textNormal2)} style={{ cursor: 'pointer' }} />\r\n            </IconButton>\r\n        </Fragment> : <Fragment>\r\n            <Checkbox type='checkbox' checked={completed} onChange={e => handleCheckboxClick(e.target.checked)} />\r\n            <ItemNameDiv style={{ textDecoration: completed ? 'line-through' : 'none' }}>{name}</ItemNameDiv>\r\n            <IconButton onClick={handleEditButtonClick}>\r\n                <EditIcon strokeColor={themed(lightTheme.textNormal2, darkTheme.textNormal2)} style={{ cursor: 'pointer' }} />\r\n            </IconButton>\r\n            <IconButton onClick={() => handleDeleteItem(index)}>\r\n                <DeleteIcon strokeColor={themed(lightTheme.textNormal2, darkTheme.textNormal2)} style={{ cursor: 'pointer' }} />\r\n            </IconButton>\r\n        </Fragment>}\r\n    </Container>;\r\n};\r\n\r\n\r\nexport default Item;","import { useCallback } from 'react';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { isEmptyString } from '../../utils';\r\nimport Item from '../Item';\r\n\r\nconst Div = styled.div`\r\n    width: 70vw;\r\n    margin: 1rem auto;\r\n    padding: 1rem;\r\n    background: ${({ theme }) => theme.glassColor1};\r\n    border-radius: 0.5rem;\r\n\r\n    @media (min-width: 1024px){\r\n        width: 35vw;\r\n        max-width: 500px;\r\n        height: 35vh;\r\n        overflow-y: auto;\r\n    }\r\n`;\r\nconst EmptyDiv = styled.div`\r\n    height:  40vh;\r\n    font-size: 2rem;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: ${({ theme }) => theme.textNormal};\r\n\r\n    @media (min-width: 1024px){\r\n        height: inherit;\r\n    }\r\n`;\r\n\r\nconst List = props => {\r\n    const { toDoList, handleEditTask, handleDeleteTask, handleCompleteTask } = props;\r\n\r\n    const handleEditItem = useCallback((index, taskName) => handleEditTask(index, taskName), [handleEditTask]);\r\n    const handleDeleteItem = useCallback(index => handleDeleteTask(index), [handleDeleteTask]);\r\n    const handleCompleteItem = useCallback((index, value) => handleCompleteTask(index, value), [handleCompleteTask]);\r\n\r\n    return <Div>\r\n        {!isEmptyString(toDoList) && toDoList.length !== 0 ? (toDoList.map((item, index) => {\r\n            return <Item key={index} index={index} toDoItem={item} handleEditItem={handleEditItem}\r\n                handleDeleteItem={handleDeleteItem} handleCompleteItem={handleCompleteItem} />\r\n        })) : <EmptyDiv>No Task!</EmptyDiv>}\r\n    </Div>\r\n};\r\n\r\nexport default List;","import styled from 'styled-components';\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport Header from '../Header';\r\nimport AddNewTask from '../addNewTask';\r\nimport List from '../List';\r\nimport { isEmptyString } from '../../utils';\r\n\r\nconst Div = styled.div`\r\n    width: inherit;\r\n    height: inherit;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nconst MobileView = styled.div`\r\n    width: inherit;\r\n    height: inherit;\r\n    display: flex;\r\n    overflow-y: auto;\r\n    flex-direction: column;\r\n    z-index: 3;\r\n    \r\n    @media (min-width: 1024px){\r\n        display: none;\r\n    }\r\n`;\r\n\r\nconst WebView = styled.div`\r\n    display: none;\r\n\r\n    @media (min-width: 1024px){\r\n        display: flex;\r\n        flex-direction: row;\r\n        width: 70vw;\r\n        max-width: 900px;\r\n        height: 70vh;\r\n        background: ${({ theme }) => theme.glassGradient};\r\n        border-radius: 2rem;\r\n        z-index: 3;\r\n        backdrop-filter: blur(1rem);\r\n    }\r\n`;\r\n\r\nconst LeftContainer = styled.div`\r\n    display: flex;  \r\n    flex-direction: column;\r\n\r\n    @media (min-width: 1024px){\r\n        flex: 0.5;\r\n        background: ${({ theme }) => theme.glassColor1};\r\n        border-top-left-radius: 2rem;\r\n        border-bottom-left-radius: 2rem;\r\n    }\r\n`;\r\n\r\nconst RightContainer = styled.div`\r\n    @media (min-width: 1024px){\r\n        flex:1;\r\n        display:flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n`\r\n\r\nconst Generate = () => {\r\n    const [toDoList, setToDoList] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setToDoList(JSON.parse(localStorage.getItem('ToDoList')));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('ToDoList', JSON.stringify(toDoList));\r\n    }, [toDoList]);\r\n\r\n    const handleAddNewTask = useCallback(item => setToDoList(!isEmptyString(toDoList) ? [...toDoList, item] : [item]), [toDoList]);\r\n    const handleDeleteTask = useCallback(index => {\r\n        const currList = toDoList.filter(item => item !== toDoList[index]);\r\n        setToDoList(currList);\r\n    }, [toDoList]);\r\n\r\n    const handleEditTask = useCallback((index, taskName) => {\r\n        const currList = toDoList.map((item, currIndex) => {\r\n            if (currIndex === index) {\r\n                item.name = taskName;\r\n            }\r\n            return item;\r\n        });\r\n        setToDoList(currList);\r\n    }, [toDoList]);\r\n\r\n    const handleCompleteTask = useCallback((index, value) => {\r\n        const currList = toDoList.map((item, currIndex) => {\r\n            if (currIndex === index) {\r\n                item.completed = value;\r\n            }\r\n            return item;\r\n        })\r\n        setToDoList(currList);\r\n    }, [toDoList]);\r\n\r\n    return <Div>\r\n        <MobileView>\r\n            <LeftContainer>\r\n                <Header />\r\n                <AddNewTask handleAddNewTask={handleAddNewTask} />\r\n            </LeftContainer>\r\n            <List toDoList={toDoList} handleEditTask={handleEditTask}\r\n                handleDeleteTask={handleDeleteTask} handleCompleteTask={handleCompleteTask} />\r\n        </MobileView>\r\n\r\n        <WebView>\r\n            <LeftContainer>\r\n                <Header />\r\n                <AddNewTask handleAddNewTask={handleAddNewTask} />\r\n            </LeftContainer>\r\n            <RightContainer>\r\n                <List toDoList={toDoList} handleEditTask={handleEditTask}\r\n                    handleDeleteTask={handleDeleteTask} handleCompleteTask={handleCompleteTask} />\r\n            </RightContainer>\r\n        </WebView>\r\n    </Div>;\r\n\r\n};\r\n\r\nexport default Generate;","const LightModeIcon = props => {\r\n\r\n    const { width, height, fill, strokeColor, strokeWidth } = props;\r\n\r\n    return <svg xmlns='http://www.w3.org/2000/svg' width={width} height={height} viewBox='0 0 24 24'\r\n        strokeWidth={strokeWidth} stroke={strokeColor} fill={fill} strokeLinecap='round' strokeLinejoin='round'>\r\n        <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill={fill} />\r\n        <circle cx=\"12\" cy=\"12\" r=\"3\" />\r\n        <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"3\" />\r\n        <line x1=\"17\" y1=\"7\" x2=\"18.4\" y2=\"5.6\" />\r\n        <line x1=\"19\" y1=\"12\" x2=\"21\" y2=\"12\" />\r\n        <line x1=\"17\" y1=\"17\" x2=\"18.4\" y2=\"18.4\" />\r\n        <line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"21\" />\r\n        <line x1=\"7\" y1=\"17\" x2=\"5.6\" y2=\"18.4\" />\r\n        <line x1=\"6\" y1=\"12\" x2=\"4\" y2=\"12\" />\r\n        <line x1=\"7\" y1=\"7\" x2=\"5.6\" y2=\"5.6\" />\r\n    </svg>\r\n};\r\n\r\nexport default LightModeIcon;\r\n\r\nLightModeIcon.defaultProps = {\r\n    width: '1.5rem',\r\n    height: '1.5rem',\r\n    fill: 'none',\r\n    strokeColor: '#fff',\r\n    strokeWidth: '1.5',\r\n}\r\n\r\n","const DarkModeIcon = props => {\r\n\r\n    const { width, height, fill, strokeColor, strokeWidth } = props;\r\n\r\n    return <svg xmlns='http://www.w3.org/2000/svg' width={width} height={height} viewBox='0 0 24 24'\r\n        strokeWidth={strokeWidth} stroke={strokeColor} fill={fill} strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n        <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill={fill} />\r\n        <path d=\"M12 3c.132 0 .263 0 .393 0a7.5 7.5 0 0 0 7.92 12.446a9 9 0 1 1 -8.313 -12.454z\" />\r\n        <path d=\"M17 4a2 2 0 0 0 2 2a2 2 0 0 0 -2 2a2 2 0 0 0 -2 -2a2 2 0 0 0 2 -2\" />\r\n        <path d=\"M19 11h2m-1 -1v2\" />\r\n    </svg>\r\n};\r\n\r\nexport default DarkModeIcon;\r\n\r\nDarkModeIcon.defaultProps = {\r\n    width: '1.5rem',\r\n    height: '1.5rem',\r\n    fill: 'none',\r\n    strokeColor: '#102F81',\r\n    strokeWidth: '1.5',\r\n}","import { useState, useEffect } from \"react\";\r\nimport { themes } from \"../resource/contants\";\r\nimport { isEmptyString } from \"../utils\";\r\n\r\nconst useDarkTheme = () => {\r\n    const [theme, setTheme] = useState(themes.LIGHT);\r\n\r\n    useEffect(() => {\r\n        if (!isEmptyString(localStorage.getItem('ToDoTheme'))) {\r\n            setTheme(localStorage.getItem('ToDoTheme'));\r\n        }\r\n        \r\n    }, []);\r\n\r\n    useEffect(() => localStorage.setItem('ToDoTheme', theme === themes.LIGHT ? themes.LIGHT : themes.DARK), [theme]);\r\n\r\n    const themeToggler = () => setTheme(theme === themes.LIGHT ? themes.DARK : themes.LIGHT);\r\n\r\n    return [theme, themeToggler];\r\n\r\n}\r\n\r\nexport default useDarkTheme;","const Circle = props => {\r\n    const { fill, style } = props;\r\n    return <svg width=\"312\" height=\"335\" viewBox=\"0 0 312 335\" style={style} fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <g filter=\"url(#filter0_f)\">\r\n            <ellipse cx=\"156\" cy=\"167.5\" rx=\"152\" ry=\"163.5\" fill={fill} fillOpacity=\"0.61\" />\r\n        </g>\r\n        <defs>\r\n            <filter id=\"filter0_f\" x=\"0\" y=\"0\" width=\"312\" height=\"335\" filterUnits=\"userSpaceOnUse\" colorInterpolationFilters=\"sRGB\">\r\n                <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\r\n                <feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"BackgroundImageFix\" result=\"shape\" />\r\n                <feGaussianBlur stdDeviation=\"2\" result=\"effect1_foregroundBlur\" />\r\n            </filter>\r\n        </defs>\r\n    </svg>;\r\n\r\n}\r\n\r\nexport default Circle;","const rectangle = props => {\r\n    const { fill, style } = props;\r\n    return <svg width=\"257\" height=\"321\" viewBox=\"0 0 257 321\" style={style} fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <g filter=\"url(#filter0_f)\">\r\n            <rect x=\"4\" y=\"4\" width=\"249\" height=\"313\" rx=\"45\" fill={fill} />\r\n        </g>\r\n        <defs>\r\n            <filter id=\"filter0_f\" x=\"0\" y=\"0\" width=\"257\" height=\"321\" filterUnits=\"userSpaceOnUse\" colorInterpolationFilters=\"sRGB\">\r\n                <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\r\n                <feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"BackgroundImageFix\" result=\"shape\" />\r\n                <feGaussianBlur stdDeviation=\"2\" result=\"effect1_foregroundBlur\" />\r\n            </filter>\r\n        </defs>\r\n    </svg>;\r\n};\r\n\r\n\r\nexport default rectangle;\r\n\r\n","import styled from 'styled-components';\r\nimport Generate from './component/Generate';\r\nimport { lightTheme, darkTheme } from './resource/theme';\r\nimport { themes } from './resource/contants';\r\nimport LightModeIcon from './assets/icons/lightModeIcon';\r\nimport DarkModeIcon from './assets/icons/darkModeIcon';\r\nimport IconButton from './component/IconButton';\r\nimport useDarkTheme from './hooks/useDarkTheme';\r\nimport { useEffect, useState } from 'react';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport Circle from './assets/shapes/circle';\r\nimport Rectangle from './assets/shapes/rectangle';\r\n\r\nconst AppContainer = styled.div`\r\n    position: fixed;\r\n\tbackground: ${({ theme }) => theme.backgroundGradient};\r\n  \theight:inherit;\r\n  \twidth:inherit;\r\n    overflow: inherit;\r\n`;\r\n\r\nconst CircleContainer = styled.div`\r\n    position: absolute;\r\n    bottom: -2%;\r\n    left: -20%;\r\n    width: 15rem;\r\n    height: 15rem;\r\n    opacity: 0.5;\r\n\r\n    @media (min-width: 480px){\r\n        left: -8%;\r\n    }\r\n\r\n    @media (min-width: 768px){\r\n        left: -2%;\r\n    }\r\n\r\n    @media (min-width: 1024px){\r\n        bottom: 2%;\r\n        left: 6%;\r\n    }\r\n\r\n    @media (min-width: 1500px){\r\n        left: 12%;\r\n    }\r\n`;\r\n\r\nconst RectangleContainer = styled.div`\r\n    position: absolute;\r\n    top: 5%;\r\n    right: 0%;\r\n    width: 10rem;\r\n    height: 15rem;\r\n    transform: rotate(-10deg);\r\n    opacity: 0.5;\r\n\r\n    @media (min-width: 480px){\r\n        right: 15%;\r\n    }\r\n\r\n    @media (min-width: 768px){\r\n        right: 28%;\r\n    }\r\n\r\n    @media (min-width: 1024px){\r\n        top: 2%;\r\n        right: 6%;\r\n        transform: rotate(0deg);\r\n    }\r\n\r\n    @media (min-width: 1500px){\r\n        right: 15%;\r\n    }\r\n`;\r\n\r\nconst EllipseContainer = styled.div`\r\n    position: absolute;\r\n    bottom: -30%;\r\n    right: -80%;\r\n    width: 35rem;\r\n    height: 25rem;\r\n    transform: rotate(-45deg);\r\n    background: ${({ theme }) => theme.ellipseGradient};\r\n    border-radius: 50%;\r\n    filter: blur(1rem);\r\n\r\n    @media (min-width: 480px){\r\n        right: -30%;\r\n    }\r\n\r\n    @media (min-width: 768px){\r\n        right: -20%;\r\n        bottom: -25%\r\n    }\r\n\r\n    @media (min-width: 1024px){\r\n        bottom: -15%;\r\n        right: -8%;\r\n    }\r\n\r\n    @media (min-width: 1500px){\r\n        right: 2%;\r\n    }\r\n`;\r\n\r\n\r\nconst App = () => {\r\n    const [theme, themeToggler] = useDarkTheme();\r\n    const [darkMode, setDarkMode] = useState(false);\r\n    const selectedTheme = theme === themes.LIGHT ? lightTheme : darkTheme;\r\n\r\n    useEffect(() => setDarkMode(theme === themes.LIGHT ? false : true), [theme]);\r\n\r\n    const handleThemeChange = () => themeToggler();\r\n    return (\r\n        <ThemeProvider theme={selectedTheme}>\r\n            <AppContainer>\r\n                <IconButton onClick={handleThemeChange}\r\n                    style={{ position: 'absolute', top: '1rem', right: '1rem', cursor: 'pointer', zIndex: '4' }}>\r\n                    {darkMode ? <LightModeIcon /> : <DarkModeIcon />}\r\n                </IconButton>\r\n                <Generate />\r\n\r\n                <CircleContainer>\r\n                    <Circle fill={darkMode ? darkTheme.accentColor3 : lightTheme.accentColor3}\r\n                        style={{ height: 'inherit', width: 'inherit' }} />\r\n                </CircleContainer>\r\n\r\n                <RectangleContainer>\r\n                    <Rectangle fill={darkMode ? darkTheme.accentColor1 : lightTheme.accentColor1}\r\n                        style={{ height: 'inherit', width: 'inherit' }} />\r\n                </RectangleContainer>\r\n\r\n                <EllipseContainer style={{ opacity: darkMode ? '0.5' : '1' }} />\r\n            </AppContainer>\r\n        </ThemeProvider>\r\n\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}